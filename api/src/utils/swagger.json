{
    "openapi": "3.0.0",
    "info": {
        "title": "Sprint poker api",
        "description": "Alguma descrição"
    },
    "servers": [
        {
            "url": "http://localhost:3000/",
            "description": "API Development"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "summary": "Authenticate user",
                "description": "Checks user credentials and returns token if valid credentials.",
                "tags": ["Login"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBaseSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Usernname or Password incorrect!"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get All Users",
                "description": "Get all Users from database",
                "tags": ["User"],
                "security": [{ "bearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserSchema"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "summary": "Create User",
                "description": "Register a new user in the database",
                "tags": ["User"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBaseSchema"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "username": "username",
                                        "passwrod": "my password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/UserBaseSchema"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Username Already exists!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "summary": "Get User by id",
                "description": "Get user from database by id",
                "tags": ["User"],
                "security": [{ "bearerAuth": [] }],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserSchema"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserBaseSchema": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "UserSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}